---
export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  class?: string;
  sizes?: string;
  quality?: number;
}

const {
  src,
  alt,
  width,
  height,
  loading = 'lazy',
  class: className = '',
  sizes = '(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw',
  quality = 80
} = Astro.props;

const generateSrcSet = (baseSrc: string, widths: number[]) => {
  return widths.map(w => `${baseSrc}?w=${w}&q=${quality} ${w}w`).join(', ');
};

const responsiveWidths = [320, 640, 768, 1024, 1280, 1920];
const srcSet = generateSrcSet(src, responsiveWidths);
---

<picture>
  <source 
    srcset={generateSrcSet(src.replace(/\.(jpg|jpeg|png)$/i, '.webp'), responsiveWidths)}
    sizes={sizes}
    type="image/webp"
  />
  
  <source 
    srcset={generateSrcSet(src.replace(/\.(jpg|jpeg|png)$/i, '.avif'), responsiveWidths)}
    sizes={sizes}
    type="image/avif"
  />
  
  <img
    src={src}
    srcset={srcSet}
    sizes={sizes}
    alt={alt}
    width={width}
    height={height}
    loading={loading}
    class={className}
    decoding="async"
  />
</picture>
